# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2021/05/05 09:28:42 UTC
#
# Author: Ching-Heng, Lin @CGMH

Bootstrap: docker
From: neurodebian:stretch-non-free

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    dirmngr \
    gnupg2
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -fsSL --retry 5 http://neuro.debian.net/lists/stretch.us-nh.full \
> /etc/apt/sources.list.d/neurodebian.sources.list
curl -sSL https://dl.dropbox.com/s/zxs209o955q6vkg/neurodebian.gpg | apt-key add -
(apt-key adv --refresh-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9 || true)
apt-get -qq update

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libgomp1 \
    libxmu6 \
    libxt6 \
    perl \
    tcsh
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "untar FreeSurfer ..."
tar -xzf /opt/freesurfer-linux-centos7_x86_64-7.1.1.tar.gz -C /opt \
  --exclude='freesurfer/average/mult-comp-cor' \
  --exclude='freesurfer/lib/cuda' \
  --exclude='freesurfer/lib/qt' \
  --exclude='freesurfer/subjects/V1_average' \
  --exclude='freesurfer/subjects/bert' \
  --exclude='freesurfer/subjects/cvs_avg35' \
  --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \
  --exclude='freesurfer/subjects/fsaverage3' \
  --exclude='freesurfer/subjects/fsaverage4' \
  --exclude='freesurfer/subjects/fsaverage5' \
  --exclude='freesurfer/subjects/fsaverage6' \
  --exclude='freesurfer/subjects/fsaverage_sym' \
  --exclude='freesurfer/trctrain'
rm /opt/freesurfer-linux-centos7_x86_64-7.1.1.tar.gz
mv /opt/license.txt /opt/freesurfer
sed -i '$isource "/opt/freesurfer/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    convert3d \
    ants \
    fsl \
    gcc \
    g++ \
    graphviz \
    tree \
    git-annex-standalone \
    vim \
    emacs-nox \
    nano \
    less \
    ncdu \
    tig \
    git-annex-remote-rclone \
    octave \
    netbase \
    libeigen3-dev \
    libfftw3-dev \
    libtiff5-dev \
    zlib1g-dev \
    wget \
    parallel
apt-get clean
rm -rf /var/lib/apt/lists/*

sed -i '$isource /etc/fsl/fsl.sh' $ND_ENTRYPOINT

export TMPDIR="$(mktemp -d)"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libncurses5 \
    libxext6 \
    libxmu6 \
    libxpm-dev \
    libxt6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MATLAB Compiler Runtime ..."
curl -fsSL --retry 5 -o "$TMPDIR/mcr.zip" https://ssd.mathworks.com/supportfiles/downloads/R2018a/deployment_files/R2018a/installers/glnxa64/MCR_R2018a_glnxa64_installer.zip
unzip -q "$TMPDIR/mcr.zip" -d "$TMPDIR/mcrtmp"
"$TMPDIR/mcrtmp/install" -destinationFolder /opt/matlabmcr-2018a -mode silent -agreeToLicense yes
rm -rf "$TMPDIR"
unset TMPDIR

export TMPDIR="$(mktemp -d)"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libncurses5 \
    libxext6 \
    libxmu6 \
    libxpm-dev \
    libxt6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MATLAB Compiler Runtime ..."
curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
apt-get install -f
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -fsSL --retry 5 -o "$TMPDIR/MCRInstaller.bin" https://dl.dropbox.com/s/zz6me0c3v4yq5fd/MCR_R2010a_glnxa64_installer.bin
chmod +x "$TMPDIR/MCRInstaller.bin"
"$TMPDIR/MCRInstaller.bin" -silent -P installLocation="/opt/matlabmcr-2010a"
rm -rf "$TMPDIR"
unset TMPDIR
echo "Downloading standalone SPM ..."
curl -fsSL --retry 5 -o /tmp/spm12.zip https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/previous/spm12_r7771_R2010a.zip
unzip -q /tmp/spm12.zip -d /tmp
mkdir -p /opt/spm12-r7771
mv /tmp/spm12/* /opt/spm12-r7771/
chmod -R 777 /opt/spm12-r7771
rm -rf /tmp/spm*
/opt/spm12-r7771/run_spm12.sh /opt/matlabmcr-2010a/v713 quit
sed -i '$iexport SPMMCRCMD=\"/opt/spm12-r7771/run_spm12.sh /opt/matlabmcr-2010a/v713 script\"' $ND_ENTRYPOINT

echo "Downloading MRtrix3 ..."
mkdir -p /opt/mrtrix3-3.0_RC3
curl -fsSL --retry 5 https://dl.dropbox.com/s/2oh339ehcxcf8xf/mrtrix3-3.0_RC3-Linux-centos6.9-x86_64.tar.gz \
| tar -xz -C /opt/mrtrix3-3.0_RC3 --strip-components 1

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    ed \
    gsl-bin \
    libglib2.0-0 \
    libglu1-mesa-dev \
    libglw1-mesa \
    libgomp1 \
    libjpeg62 \
    libxm4 \
    netpbm \
    tcsh \
    xfonts-base \
    xvfb
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
curl -sSL --retry 5 -o /tmp/toinstall.deb http://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
apt-get install -f
apt-get clean
rm -rf /var/lib/apt/lists/*
gsl2_path="$(find / -name 'libgsl.so.19' || printf '')"
if [ -n "$gsl2_path" ]; then
  ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0";
fi
ldconfig
echo "Downloading AFNI ..."
mkdir -p /opt/afni-latest
curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
| tar -xz -C /opt/afni-latest --strip-components 1

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    connectome-workbench
apt-get clean
rm -rf /var/lib/apt/lists/*

export PATH="/opt/miniconda-latest/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-latest
rm -f "$conda_installer"
conda update -yq -nbase conda
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
sync && conda clean -y --all && sync
conda create -y -q --name neuro
conda install -y -q --name neuro \
    "python=3.6" \
    "numpy" \
    "pandas" \
    "traits"
sync && conda clean -y --all && sync
bash -c "source activate neuro
  pip install --no-cache-dir  \
      "nipype""
rm -rf ~/.cache/pip/*
sync


apt-get update -qq
apt-get install -y -q --no-install-recommends \
    cmake \
    g++ \
    gcc \
    git \
    make \
    pigz \
    zlib1g-dev
apt-get clean
rm -rf /var/lib/apt/lists/*
git clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix
mkdir /tmp/dcm2niix/build
cd /tmp/dcm2niix/build
cmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-latest ..
make
make install
rm -rf /tmp/dcm2niix

echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "neurodebian:stretch-non-free"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "neurodebian",
\n      {
\n        "os_codename": "stretch",
\n        "server": "usa-nh"
\n      }
\n    ],
\n    [
\n      "freesurfer",
\n      {
\n        "version": "7.1.1",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "copy",
\n      [
\n        "license.txt",
\n        "/opt/freesurfer"
\n      ]
\n    ],
\n    [
\n      "install",
\n      [
\n        "convert3d",
\n        "ants",
\n        "fsl",
\n        "gcc",
\n        "g++",
\n        "graphviz",
\n        "tree",
\n        "git-annex-standalone",
\n        "vim",
\n        "emacs-nox",
\n        "nano",
\n        "less",
\n        "ncdu",
\n        "tig",
\n        "git-annex-remote-rclone",
\n        "octave",
\n        "netbase",
\n        "libeigen3-dev",
\n        "libfftw3-dev",
\n        "libtiff5-dev",
\n        "zlib1g-dev",
\n        "wget",
\n        "parallel"
\n      ]
\n    ],
\n    [
\n      "add_to_entrypoint",
\n      "source /etc/fsl/fsl.sh"
\n    ],
\n    [
\n      "matlabmcr",
\n      {
\n        "version": "2018a",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "spm12",
\n      {
\n        "version": "r7771",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "mrtrix3",
\n      {
\n        "version": "3.0_RC3"
\n      }
\n    ],
\n    [
\n      "afni",
\n      {
\n        "version": "latest",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "install",
\n      [
\n        "connectome-workbench"
\n      ]
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "create_env": "neuro",
\n        "conda_install": [
\n          "python=3.6",
\n          "numpy",
\n          "pandas",
\n          "traits"
\n        ],
\n        "pip_install": [
\n          "nipype"
\n        ]
\n      }
\n    ],
\n    [
\n      "dcm2niix",
\n      {
\n        "version": "latest",
\n        "method": "source"
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export FREESURFER_HOME="/opt/freesurfer"
export PATH="/opt/freesurfer/bin:$PATH"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2018a/v94/runtime/glnxa64:/opt/matlabmcr-2018a/v94/bin/glnxa64:/opt/matlabmcr-2018a/v94/sys/os/glnxa64:/opt/matlabmcr-2018a/v94/extern/bin/glnxa64"
export MATLABCMD="/opt/matlabmcr-2018a/v94/toolbox/matlab"
export FORCE_SPMMCR="1"
export SPM_HTML_BROWSER="0"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2010a/v713/runtime/glnxa64:/opt/matlabmcr-2010a/v713/bin/glnxa64:/opt/matlabmcr-2010a/v713/sys/os/glnxa64:/opt/matlabmcr-2010a/v713/extern/bin/glnxa64"
export MATLABCMD="/opt/matlabmcr-2010a/v713/toolbox/matlab"
export PATH="/opt/mrtrix3-3.0_RC3/bin:$PATH"
export PATH="/opt/afni-latest:$PATH"
export AFNI_PLUGINPATH="/opt/afni-latest"
export CONDA_DIR="/opt/miniconda-latest"
export PATH="/opt/miniconda-latest/bin:$PATH"
export PATH="/opt/dcm2niix-latest/bin:$PATH"

%files
/home/jim/Desktop/freesurfer-linux-centos7_x86_64-7.1.1.tar.gz /opt
license.txt /opt

%runscript
/neurodocker/startup.sh "$@"

%labels
Author Ching-Heng, Lin
Version v0.0.1

%help
I need somebody
(Help!) not just anybody
(Help!) you know I need someone
Help!