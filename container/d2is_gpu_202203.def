# # # # # # # # # # # # # # # # # # # # # # #
# Author: Ching-Heng, Lin (Jim) @ CGMHAI
# Project: D2IS
# # # # # # # # # # # # # # # # # # # # # # #

Bootstrap: docker
From: neurodebian:stretch-non-free

%files
    /home/jim/Desktop/key_files/qt-opensource-linux-x64-5.12.10.run /
    /home/jim/Desktop/key_files/cuda_9.1.85_387.26_linux /opt
    /home/jim/Desktop/key_files/fsl-6.0.3-centos6_64.tar.gz /opt
    /home/jim/Desktop/key_files/freesurfer-linux-centos7_x86_64-7.1.1.tar.gz /opt
    /home/jim/Desktop/key_files/license.txt /opt

%post
    su - root
    # setup neurodebian
    echo " ********* setup neurodebian"
    export ND_ENTRYPOINT="/neurodocker/startup.sh"
    apt-get update -qq
    apt-get install -y -q --no-install-recommends \
        apt-utils \
        bzip2 \
        ca-certificates \
        curl \
        locales \
        unzip
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    dpkg-reconfigure --frontend=noninteractive locales
    update-locale LANG="en_US.UTF-8"
    chmod 777 /opt && chmod a+s /opt
    mkdir -p /neurodocker
    if [ ! -f "$ND_ENTRYPOINT" ]; then
      echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
      echo 'set -e' >> "$ND_ENTRYPOINT"
      echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
      echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
    fi
    chmod -R 777 /neurodocker && chmod a+s /neurodocker

    apt-get update -qq
    apt-get install -y -q --no-install-recommends \
        dirmngr \
        gnupg2
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    curl -fsSL --retry 5 http://neuro.debian.net/lists/stretch.us-nh.full \
    > /etc/apt/sources.list.d/neurodebian.sources.list
    curl -sSL https://dl.dropbox.com/s/zxs209o955q6vkg/neurodebian.gpg | apt-key add -
    (apt-key adv --refresh-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9 || true)
    apt-get -qq update

    apt-get install -y -q --no-install-recommends \
        dirmngr \
        gnupg2 \
        convert3d \
        gcc \
        g++ \
        graphviz \
        tree \
        vim \
        emacs-nox \
        nano \
        less \
        ncdu \
        tig \
        octave \
        wget \
        netbase \
        libeigen3-dev \
        libfftw3-dev \
        libtiff5-dev \
        zlib1g-dev \
        git-annex-standalone \
        git-annex-remote-rclone \
        python3 \
        python3-pip
    ln -s /usr/bin/python3 /usr/bin/python
    # install Qt, CUDA dependencies
    echo "********* install Qt, CUDA dependencies"
    apt-get install -y libgl1-mesa-glx libgl1-mesa-dev freeglut3 libx11-dev libxtst6 libfontconfig libdbus-1-3 mesa-utils libxrender-dev libxkbcommon-x11-0

    # install FSL dependencies
    echo "********* install FSL dependencies"
    apt-get install -y -q --no-install-recommends \
        bc \
        dc \
        file \
        libfontconfig1 \
        libfreetype6 \
        libgl1-mesa-dev \
        libgl1-mesa-dri \
        libglu1-mesa-dev \
        libgomp1 \
        libice6 \
        libxcursor1 \
        libxft2 \
        libxinerama1 \
        libxrandr2 \
        libxrender1 \
        libxt6 \
        sudo \
        libopenblas-base

    # ANTs installs tzdata as a dependency; however its installer is interactive
    # Therefore we need to do some shenanigans here to force it though
    echo "********* install ANTs dependencies"
    DEBIAN_FRONTEND=noninteractive \
        apt-get install -y tzdata

    # install Freesurfer dependencies
    echo "*********  install Freesurfer dependencies"
    apt-get install -y -q --no-install-recommends \
        bc \
        libgomp1 \
        libxmu6 \
        libxt6 \
        perl \
        tcsh \
        binutils \
        psmisc \
        sudo \
        tar \
        unzip \
        uuid-dev \
        vim-common \
        libjpeg62-turbo-dev \
        parallel

    # install AFNI dependencies
    echo "********* install AFNI dependencies"
    apt-get install -y -q --no-install-recommends \
        ed \
        gsl-bin \
        libglib2.0-0 \
        libglu1-mesa-dev \
        libglw1-mesa \
        libgomp1 \
        libjpeg62 \
        libxm4 \
        netpbm \
        tcsh \
        xfonts-base \
        xvfb

    # install matlabmcr/SPM12 dependencies
    echo "********* install SPM12 dependencies"
    apt-get install -y -q --no-install-recommends \
        bc \
        libncurses5 \
        libxext6 \
        libxmu6 \
        libxpm-dev \
        libxt6

    # install FreeSurfer =========================================================================
    echo "install FreeSurfer ..."
    tar -xzf /opt/freesurfer-linux-centos7_x86_64-7.1.1.tar.gz -C /opt \
        --exclude='freesurfer/average/mult-comp-cor' \
        --exclude='freesurfer/lib/cuda' \
        --exclude='freesurfer/lib/qt' \
        --exclude='freesurfer/subjects/V1_average' \
        --exclude='freesurfer/subjects/bert' \
        --exclude='freesurfer/subjects/cvs_avg35' \
        --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \
        --exclude='freesurfer/subjects/fsaverage3' \
        --exclude='freesurfer/subjects/fsaverage4' \
        --exclude='freesurfer/subjects/fsaverage5' \
        --exclude='freesurfer/subjects/fsaverage6' \
        --exclude='freesurfer/subjects/fsaverage_sym' \
        --exclude='freesurfer/trctrain'
    rm /opt/freesurfer-linux-centos7_x86_64-7.1.1.tar.gz
    mv /opt/license.txt /opt/freesurfer
    sed -i '$isource "/opt/freesurfer/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

    # install ANTS  =========================================================================
    apt-get install -y -q --no-install-recommends \
        ants

    # install Connectome-Workbench =========================================================================
    apt-get install -y -q --no-install-recommends \
        connectome-workbench

    # install Qt =========================================================================
    cd / && mkdir Qt
    # wget https://download.qt.io/official_releases/qt/5.12/5.12.10/qt-opensource-linux-x64-5.12.10.run
    git clone https://github.com/benlau/qtci
    export http_proxy=invalid
    qtci/bin/extract-qt-installer qt-opensource-linux-x64-5.12.10.run /Qt
    rm -rf qtci qt-opensource-linux-x64-5.12.10.run
    export http_proxy=''

    # install mrtrix =========================================================================
    cd /opt
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -f -b -p /opt/conda
    . /opt/conda/etc/profile.d/conda.sh
    conda activate base
    conda update --yes --all
    conda create -n mrtrix
    conda activate mrtrix
    conda install --yes -c mrtrix3 mrtrix3=3.0.2

    #
    conda install -c anaconda pip
    pip install fmriprep

    # install mrtrix3Tissue =========================================================================
    cd /opt
    git clone https://github.com/3Tissue/MRtrix3Tissue.git MRtrix3Tissue
    cd MRtrix3Tissue
    ./configure -nogui
    ./build
    ./set_path

    # install cuda 9.1 =========================================================================
    cd /opt
    # wget https://developer.nvidia.com/compute/cuda/9.1/Prod/local_installers/cuda_9.1.85_387.26_linux
    sh cuda_9.1.85_387.26_linux --extract=$PWD
    sh cuda-linux.9.1.85-23083092.run -noprompt
    rm cuda_9.1.85_387.26_linux

    # install ibquadmanth for fsl eddy to work =========================================================================
    apt-get install -y libquadmath0

    # install FSL =========================================================================
    cd /opt
    # wget https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.3-centos6_64.tar.gz
    tar -xzf fsl-6.0.3-centos6_64.tar.gz
    mv /opt/fsl /opt/fsl-6.0.3
    rm /opt/fsl-6.0.3-centos6_64.tar.gz
    export FSLDIR="/opt/fsl-6.0.3"
    ln -sf ${FSLDIR}/bin/eddy_cuda9.1 ${FSLDIR}/bin/eddy_cuda

    # install AFNI =========================================================================
    echo "install AFNI ..."
    curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
    dpkg -i /tmp/toinstall.deb
    rm /tmp/toinstall.deb
    curl -sSL --retry 5 -o /tmp/toinstall.deb http://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb
    dpkg -i /tmp/toinstall.deb
    rm /tmp/toinstall.deb
    apt-get install -f
    gsl2_path="$(find / -name 'libgsl.so.19' || printf '')"
    if [ -n "$gsl2_path" ]; then
      ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0";
    fi
    ldconfig
    echo "Downloading AFNI ..."
    mkdir -p /opt/afni-latest
    curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
    | tar -xz -C /opt/afni-latest --strip-components 1

    # install MATLAB Compiler Runtime =========================================================================
    export TMPDIR="$(mktemp -d)"
    echo "Downloading MATLAB Compiler Runtime ..."
    curl -fsSL --retry 5 -o "$TMPDIR/mcr.zip" https://ssd.mathworks.com/supportfiles/downloads/R2018a/deployment_files/R2018a/installers/glnxa64/MCR_R2018a_glnxa64_installer.zip
    unzip -q "$TMPDIR/mcr.zip" -d "$TMPDIR/mcrtmp"
    "$TMPDIR/mcrtmp/install" -destinationFolder /opt/matlabmcr-2018a -mode silent -agreeToLicense yes
    rm -rf "$TMPDIR"
    unset TMPDIR

    # install SPM12 =========================================================================
    echo "Downloading MATLAB Compiler Runtime ..."
    export TMPDIR="$(mktemp -d)"
    curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
    dpkg -i /tmp/toinstall.deb
    rm /tmp/toinstall.deb
    apt-get install -f
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    curl -fsSL --retry 5 -o "$TMPDIR/MCRInstaller.bin" https://dl.dropbox.com/s/zz6me0c3v4yq5fd/MCR_R2010a_glnxa64_installer.bin
    chmod +x "$TMPDIR/MCRInstaller.bin"
    "$TMPDIR/MCRInstaller.bin" -silent -P installLocation="/opt/matlabmcr-2010a"
    rm -rf "$TMPDIR"
    unset TMPDIR
    echo "Downloading standalone SPM ..."
    curl -fsSL --retry 5 -o /tmp/spm12.zip https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/previous/spm12_r7771_R2010a.zip
    unzip -q /tmp/spm12.zip -d /tmp
    mkdir -p /opt/spm12-r7771
    mv /tmp/spm12/* /opt/spm12-r7771/
    chmod -R 777 /opt/spm12-r7771
    rm -rf /tmp/spm*
    /opt/spm12-r7771/run_spm12.sh /opt/matlabmcr-2010a/v713 quit
    sed -i '$iexport SPMMCRCMD=\"/opt/spm12-r7771/run_spm12.sh /opt/matlabmcr-2010a/v713 script\"' $ND_ENTRYPOINT


    # clean up
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    conda clean --yes --all


%environment
    # neurodebian
    export LANG="en_US.UTF-8"
    export LC_ALL="en_US.UTF-8"
    export ND_ENTRYPOINT="/neurodocker/startup.sh"

    # mrtrix
    export PATH=/opt/conda/envs/mrtrix/bin:/opt/conda/bin:${PATH}

    # mrtrix3Tissue
    export PATH=/opt/MRtrix3Tissue/bin:${PATH}

    # cuda
    export PATH=/usr/local/cuda-9.1/bin:${PATH}
    export LD_LIBRARY_PATH=/lib64:/usr/local/cuda-9.1/lib64:${LD_LIBRARY_PATH}

    # fsl
    export FSLDIR="/opt/fsl-6.0.3"
    export PATH="/opt/fsl-6.0.3/bin:$PATH"
    export FSLOUTPUTTYPE="NIFTI_GZ"
    export FSLMULTIFILEQUIT="TRUE"
    export FSLTCLSH="/opt/fsl-6.0.3/bin/fsltclsh"
    export FSLWISH="/opt/fsl-6.0.3/bin/fslwish"
    export FSLLOCKDIR=""
    export FSLMACHINELIST=""
    export FSLREMOTECALL=""
    export FSLGECUDAQ="cuda.q"

    # freesurfer
    export FREESURFER_HOME="/opt/freesurfer"
    export PATH="/opt/freesurfer/bin:$PATH"
    export FSF_OUTPUT_FORMAT=nii.gz
    export MNI_DIR=/opt/freesurfer/mni
    export LOCAL_DIR=/opt/freesurfer/local
    export FREESURFER_HOME=/opt/freesurfer
    export FSFAST_HOME=/opt/freesurfer/fsfast
    export MINC_BIN_DIR=/opt/freesurfer/mni/bin
    export MINC_LIB_DIR=/opt/freesurfer/mni/lib
    export MNI_DATAPATH=/opt/freesurfer/mni/data
    export FMRI_ANALYSIS_DIR=/opt/freesurfer/fsfast
    export PERL5LIB=/opt/freesurfer/mni/lib/perl5/5.8.5
    export MNI_PERL5LIB=/opt/freesurfer/mni/lib/perl5/5.8.5

    # ants
    export ANTSPATH=/usr/lib/ants
    export PATH=/usr/lib/ants:$PATH

    # afni
    export PATH="/opt/afni-latest:$PATH"
    export AFNI_PLUGINPATH="/opt/afni-latest"

    # matlab runtime
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2018a/v94/runtime/glnxa64:/opt/matlabmcr-2018a/v94/bin/glnxa64:/opt/matlabmcr-2018a/v94/sys/os/glnxa64:/opt/matlabmcr-2018a/v94/extern/bin/glnxa64"
    export MATLABCMD="/opt/matlabmcr-2018a/v94/toolbox/matlab"

    # spm12
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2010a/v713/runtime/glnxa64:/opt/matlabmcr-2010a/v713/bin/glnxa64:/opt/matlabmcr-2010a/v713/sys/os/glnxa64:/opt/matlabmcr-2010a/v713/extern/bin/glnxa64"
    export FORCE_SPMMCR="1"
    export SPM_HTML_BROWSER="0"
    export MATLABCMD="$MATLABCMD:/opt/matlabmcr-2010a/v713/toolbox/matlab"

%runscript
    /neurodocker/startup.sh "$@"


%labels
    Author Ching-Heng, Lin
    Version v1.0

%help
    I need somebody
    (Help!) not just anybody
    (Help!) you know I need someone
    Help!